RFC 4960 


SECTION 3 SCTP Packet Format
1) 
INIT, INIT ACK, and SHUTDOWN COMPLETE chunks.
MUST NOT be bundled with any other chunk in a packet.
2)  
All integer fields in an SCTP packet MUST be transmitted in network
byte order, unless otherwise stated.
3) 
Source Port Number is the SCTP sender's port number. 
 It can be used by the receiver in combination with the source IP address, 
 the SCTP destination port, and possibly the destination IP address to
identify the association to which this packet belongs.
Source Port Number MUST NOT be 0
Dest Port Number MUST NOT be 0
4) 
A packet containing an INIT chunk MUST have a zero Verification Tag.
A packet containing a SHUTDOWN COMPLETE chunk with the T bit
set MUST have the Verification Tag copied from the packet with
the SHUTDOWN ACK chunk.
5)
A packet containing an ABORT chunk may have the verification
tag copied from the packet that caused the ABORT to be sent.


SECTION 3.2 Chunk Field Descriptions
6)
Chunk Types are encoded such that the highest-order 2 bits specify
the action that must be taken if the processing endpoint does not
recognize the Chunk Type.
7)
 if the Chunk Value field is zero-length, the Length
field will be set to 4.  The Chunk Length field does not count any
chunk padding.
8)
However, it does include padding of any variable-length
parameter except the last parameter in the chunk.  The receiver
MUST ignore the padding.
9) 
A robust implementation should accept the chunk whether or
not the final padding has been included in the Chunk Length.


10)
Please note that in all four cases, an INIT ACK or COOKIE ECHO chunk
is sent.  In the 00 or 01 case, the processing of the parameters
after the unknown parameter is canceled, but no processing already
done is rolled back.

11)
refers to section 3.2.2 


3.3.1.  Payload Data (DATA) (0)
12)
A DATA chunk with a User Data field of length L will have the
Length field set to (16 + L) (indicating 16+L bytes) where L MUST
be greater than 0.
13)
the same Stream Sequence Number MUST be carried in each of the
fragments of the message.


3.3.2.  Initiation (INIT) (1)
14)
An INIT chunk MUST NOT contain more than one Host Name
Address parameter.  Moreover, the sender of the INIT MUST NOT combine
any other address types with the Host Name Address in the INIT.
15)
Combined with the Source Port Number in the SCTP common header,
the value passed in an IPv4 or IPv6 Address parameter indicates a
transport address the sender of the INIT will support for the
association being initiated.  That is, during the life time of
this association, this IP address can appear in the source address
field of an IP datagram sent from the sender of the INIT, and can
be used as a destination address of an IP datagram sent from the
receiver of the INIT.
16)
IMPLEMENTATION NOTE: If an INIT chunk is received with known
parameters that are not optional parameters of the INIT chunk, then
the receiver SHOULD process the INIT chunk and send back an INIT ACK.
The receiver of the INIT chunk MAY bundle an ERROR chunk with the
COOKIE ACK chunk later.  However, restrictive implementations MAY
send back an ABORT chunk in response to the INIT chunk.
17)
The receiver of the INIT (the responding end) records the value of
the Initiate Tag parameter.
18)
If the value of the Initiate Tag in a received INIT chunk is found
to be 0, the receiver MUST treat it as an error and close the
association by transmitting an ABORT.
19)
A receiver of an INIT with the OS value set to 0 SHOULD abort the association.
20)
 Thevalue 0 MUST NOT be used for MIS
 21)
Note: There is no negotiation of the actual number of streams but
instead the two endpoints will use the min(requested, offered).
See Section 5.1.1 for details.
22)
Note: A receiver of an INIT with the MIS value of 0 SHOULD abort
the association.
23)
Initial TSN (I-TSN) field MAY be set to the value of the Initiate Tag field.
24)


3.3.2.1.  Optional/Variable-Length Parameters in INIT
24)
Combined with the Source Port Number in the SCTP common header,
      the value passed in an IPv4 or IPv6 Address parameter indicates a
      transport address the sender of the INIT will support for the
      association being initiated. 
25)
  If the INIT contains at least one IP Address parameter, then the
      source address of the IP datagram containing the INIT chunk and
      any additional address(es) provided within the INIT can be used as
      destinations by the endpoint receiving the INIT.  If the INIT does
      not contain any IP Address parameters, the endpoint receiving the
      INIT MUST use the source address associated with the received IP
      datagram as its sole destination address for the association.
      
      
3.3.3.  Initiation Acknowledgement (INIT ACK) (2)
26)
If the value of the Initiate Tag in a received INIT ACK chunk is
found to be 0, the receiver MUST destroy the association
discarding its TCB.  The receiver MAY send an ABORT for debugging
purpose.
27)
Note: A receiver of an INIT ACK with the MIS value set to 0 SHOULD
destroy the association discarding its TCB.
28)
Moreover, the sender of the INIT ACK MUST NOT
combine any other address types with the Host Name Address in the
INIT ACK.  The receiver of the INIT ACK MUST ignore any other address
types if the Host Name Address parameter is present.
29)
IMPLEMENTATION NOTE: An implementation MUST be prepared to receive an
INIT ACK that is quite large (more than 1500 bytes) due to the
variable size of the State Cookie AND the variable address list.  
30)
IMPLEMENTATION NOTE: If an INIT ACK chunk is received with known
parameters that are not optional parameters of the INIT ACK chunk,
then the receiver SHOULD process the INIT ACK chunk and send back a
COOKIE ECHO.  The receiver of the INIT ACK chunk MAY bundle an ERROR
chunk with the COOKIE ECHO chunk.  However, restrictive
implementations MAY send back an ABORT chunk in response to the INIT
ACK chunk.
31)
This parameter value MUST contain all the necessary state and
parameter information required for the sender of this INIT ACK to
create the association, along with a Message Authentication Code
(MAC).  See Section 5.1.3 for details on State Cookie definition.
32)


3.3.4.  Selective Acknowledgement (SACK) (3)
This chunk is sent to the peer endpoint to acknowledge received DATA
chunks and to inform the peer endpoint of gaps in the received
subsequences of DATA chunks as represented by their TSNs.



      