- - - - - - - - - - - - - - SICK CASE of RECEIVE INIT At COOKIE_WAIT_STATE - - - - - - - - - - - - - - - -
CASE(1): Z sends INIT before it  receives INIT sent by A
{A sets connection with z}
(build channel)
A [lt=a1,pt=0,ltt=0,ptt=0]
T0 INIT [vt=0,it=a1]                                   
(starts t1-init timer)                                 
(enters COOKIE-WAIT state)  
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - >                          																							
			 																			{Z sets connection with z}
																						Z [lt=z1,pt=0,ltt=0,ptt=0]
																						T1 INIT [vt=0,it=a1]                                   
																						(starts t1-init timer)                                 
																						(enters COOKIE-WAIT state)
<- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 																					 
Sick Case happens: recv INIT at cookie wait state
(compose tmp channel and cookie_a)
(uses old itag a1)
T2 INIT_ACK [vt=z1,itag=a1,COOKIE_A[lt=a1,pt=z1,ltt=0, ptt=0]]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - >
FLYING CHUNKS AT THIS MOMENT HAVE T0 INIT && T2 INIT_ACK
CASE(1.1) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
																						Z firstly receives T2 INIT_ACK [vt=z1,itag=a1,COOKIE_A[lt=a1,pt=z1,ltt=0, ptt=0]]
																						(canncel t1-init timer)
																						(update curr channel)
																						Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
																						T3 COOKIE_ECHO [COOKIE_Z [lt=z1,pt=a1,ltt=z1, ptt=a1]]
																						(start t1-init timer)
																						(enters COOKIE_ECHOED state)

																						Z secondly receives T0 INIT [vt=0,it=a1]
																						sick case happens: recv INIT at COOKIE_ECHOED state
																						(uses old itag z1 and populate tie tags)
																						T4 INIT_ACK [vt=a1,itag=z1,COOKIE_Z[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
<- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
FLYING CHUNKS AT THIS MOMENT HAVE T3 COOKIE_ECHO && T4 INIT_ACK
CASE(1.1.1) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
A firstly receives T3 COOKIE_ECHO [COOKIE_Z[lt=z1,pt=a1,ltt=z1, ptt=a1]]
(validate cookie)
(compare tags within cookie and A)
(take action B for it is mxaa)
COOKIE_A [lt=a1,pt=z1,ltt=z1, ptt=a1]
A [lt=a1,pt=0,ltt=0,ptt=0])
(update A's pt with cookie_z1)
A [lt=a1,pt=z1,ltt=a1,ptt=a1]
T5 COOKIE_ACK [vt=z1]
(Enters CONNECTED)

Z secondly receives T4 INIT_ACK [vt=a1,itag=z1,COOKIE_Z[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
Sick Case happens: recv INIT_ACK at CONNECTED state
(discard INIT_ACK)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ->
FLYING CHUNKS AT THIS MOMENT HAVE ONLY T5 COOKIE_ACK [vt=z1]
																						Z COOKIE_ECHOED state
																						(canncel t1-init timer)
																						(Enters CONNECTED)
RESULT: 
A [lt=a1,pt=z1,ltt=a1,ptt=a1]
Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
Z successfully connects to A
CASE(1.1.1) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CASE(1.1.2) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
A firstly receives T4 INIT_ACK 
[vt=a1,itag=z1,COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
(update A's channel)
A [lt=a1,pt=z1,ltt=a1,ptt=z1]
T5 COOKIE_ECHO [vt=z1,COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
(start t1-init timer)
(enters COOKIE_ECHOED state)

A secondly receives T3 COOKIE_ECHO [COOKIE_A[lt=z1,pt=a1,ltt=z1, ptt=a1]]
(validate cookie)
(compare tags within cookie and A)
(take action B for it is mxaa)
COOKIE_A [lt=a1,pt=z1,ltt=z1, ptt=a1]
A [lt=a1,pt=0,ltt=a1,ptt=a1])
(update A's pt with cookie_z1)
A [lt=a1,pt=z1,ltt=a1,ptt=a1]
T6 COOKIE_ACK [vt=z1]
(Enters CONNECTED)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ->
FLYING CHUNKS AT THIS MOMENT HAVE T6 COOKIE_ACK [vt=z1] && T5 COOKIE_ECHO [vt=z1,COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
CASE(1.1.2.1) >>>>>>>>>>>>>>>>>>>>>>>>>>
																						Z COOKIE_ECHOED state
																						Z firstly receives T6 COOKIE_ACK [vt=z1]
																						(canncel t1-init timer)
																						(Enters CONNECTED)

																						Z CONNECTED state
																						Z secondly receives T5 COOKIE_ECHO [vt=z1,COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
																						(discard)
RESULT: 
A [lt=a1,pt=z1,ltt=a1,ptt=p1]
Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
Z successfully connects to A
CASE(1.1.2.1) >>>>>>>>>>>>>>>>>>>>>>>>>>
CASE(1.1.2.2) >>>>>>>>>>>>>>>>>>>>>>>>>>
																						Z COOKIE_ECHOED state
																						Z firstly receives T5 COOKIE_ECHO [vt=z1,COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
																						(validate cookie)
																						(compare tags within cookie and Z)
																						COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]
																						Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
																						(take action D for it is mmaa && at  COOKIE_ECHOED state)
																						(Enters CONNECTED)

																						Z CONNECTED state
																						Z secondly receives T6 COOKIE_ACK [vt=z1]
																						(discard)
RESULT: 
A [lt=a1,pt=z1,ltt=a1,ptt=a1]
Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
A successfully connects to Z
CASE(1.1.2.2) <<<<<<<<<<<<<<<<<<<<<<<<<<
CASE(1.1.2) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CASE(1.1) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CASE(1.2) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
																						Z firstly receives T0 INIT [vt=0,it=a1] 
																						Sick Case happens: recv INIT at cookie wait state
																						(compose tmp channel and cookie_z)
																						(uses old itag z1)
																						T3 INIT_ACK [vt=a1,itag=z1,COOKIE_Z [lt=z1,pt=a1,ltt=0, ptt=0]])

																						Z secondly receives T2 INIT_ACK [vt=z1,itag=a1,COOKIE_A[lt=a1,pt=z1,ltt=0, ptt=0]]
																						(update Z's channel)
																						Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
																						T4 COOKIE_ECHO [COOKIE_Z[lt=z1,pt=a1,ltt=z1, ptt=a1]]
																						(start t1-init timer)
																						(enters COOKIE_ECHOED state)
<- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
FLYING CHUNKS AT THIS MOMENT HAVE T3 INIT_ACK && T4 COOKIE_ECHO
CASE(1.2.1) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
A firstly receives T4 COOKIE_ECHO [COOKIE_Z[lt=z1,pt=a1,ltt=z1, ptt=a1]]
(validate cookie)
(compare tags within cookie and A)
(take action B for it is mxaa)
COOKIE_Z [lt=z1,pt=a1,ltt=z1, ptt=a1]
A [lt=a1,pt=0,ltt=0,ptt=0])
(update A's pt with cookie_z1)
A [lt=a1,pt=z1,ltt=a1,ptt=a1]
T5 COOKIE_ACK [vt=z1]
(Enters CONNECTED)

A secondly receives T3 INIT_ACK [vt=a1,itag=z1,COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
Sick Case happens: recv INIT_ACK at CONNECTED state
(discard INIT_ACK)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ->
FLYING CHUNKS AT THIS MOMENT HAVE ONLY T5 COOKIE_ACK 
																						Z COOKIE_ECHOED state
																						Z receives T5 COOKIE_ACK [vt=z1]
																						(canncel t1-init timer)
																						(Enters CONNECTED)
RESULT: 
A [lt=a1,pt=z1,ltt=a1,ptt=a1]
Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
Z successfully connects to A
CASE(1.2.1) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CASE(1.2.2) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
A firstly receives T3 INIT_ACK [vt=a1,itag=z1,COOKIE_Z [lt=z1,pt=a1,ltt=0, ptt=0]]) 
(update A's channel)
A [lt=a1,pt=z1,ltt=a1,ptt=z1]
T5 COOKIE_ECHO [vt=z1,COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
(start t1-init timer)
(enters COOKIE_ECHOED state)

A secondly receives T4 COOKIE_ECHO [COOKIE_Z[lt=z1,pt=a1,ltt=z1, ptt=a1]]
(validate cookie)
(compare tags within cookie and A)
(take action B for it is mxaa)
COOKIE_Z [lt=a1,pt=z1,ltt=z1, ptt=a1]
A [lt=a1,pt=0,ltt=a1,ptt=a1])
(update A's pt with cookie_z1)
A [lt=a1,pt=z1,ltt=a1,ptt=a1]
T6 COOKIE_ACK [vt=z1]
(Enters CONNECTED)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ->
FLYING CHUNKS AT THIS MOMENT HAVE T5 COOKIE_ECHO && T6 COOKIE_ACK
CASE(1.2.2.1) >>>>>>>>>>>>>>>>>>>>>>>>>>>
																						Z COOKIE_ECHOED state
																						Z firstly receives T6 COOKIE_ACK [vt=z1]
																						(canncel t1-init timer)
																						(Enters CONNECTED)

																						Z CONNECTED state
																						Z secondly receives T5 COOKIE_ECHO [vt=z1,COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
																						(discard)
RESULT: 
A [lt=a1,pt=z1,ltt=a1,ptt=a1]
Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
Z successfully connects to A
CASE(1.2.2.1) <<<<<<<<<<<<<<<<<<<<<<<<<<<
CASE(1.2.2.2) >>>>>>>>>>>>>>>>>>>>>>>>>>>
																						Z COOKIE_ECHOED state
																						Z firstly receives T5 COOKIE_ECHO [vt=z1,COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]]
																						(validate cookie)
																						(compare tags within cookie and Z)
																						COOKIE_A[lt=z1,pt=a1,ltt=zr1, ptt=lr1]
																						Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
																						(take action D for it is mmaa && at  COOKIE_ECHOED state)
																						(Enters CONNECTED)

																						Z CONNECTED state
																						Z secondly receives T6 COOKIE_ACK [vt=z1]
																						(discard)
RESULT: 
A [lt=a1,pt=z1,ltt=a1,ptt=a1]
Z [lt=z1,pt=a1,ltt=z1,ptt=a1]
A successfully connects to Z
CASE(1.2.2.2) <<<<<<<<<<<<<<<<<<<<<<<<<<<
CASE(1.2.2) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CASE(1.2) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CASE(1) ENDS

CASE(2): Z sends INIT AFTER it  receives INIT sent by A
//TODO change something in CASE(1) and mke it the CASE (2)
{A sets connection with z}
(build channel)
A [lt=a1,pt=0,ltt=0,ptt=0]
T0 INIT [vt=0,it=a1]                                   
(starts t1-init timer)                                 
(enters COOKIE-WAIT state)  
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - > 
																						(compose tmp channel and cookie_z)
																						(use newly created itag z1)
																						T2 INIT_ACK [vt=a1,itag=z1,COOKIE_Z[lt=z1,pt=a1,ltt=0, ptt=0]]

																						{Z sets connection with z}
																						(use newly created itag z2)
																						Z [lt=z2,pt=0,ltt=0,ptt=0]
																						T3 INIT [vt=0,it=z2]                                   
																						(starts t1-init timer)                                 
																						(enters COOKIE-WAIT state)
<- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
FLYING CHUNKS AT THIS MOMENT HAVE T3 INIT [vt=0,it=z2] && T2 INIT_ACK [vt=a1,itag=z1,COOKIE_Z[lt=z1,pt=a1,ltt=0, ptt=0]]
//todo
CASE(2) ENDS

